{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mithil H M\\\\Downloads\\\\form'\\\\src\\\\components\\\\ui\\\\DecryptedText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecryptedText = ({\n  text,\n  className = \"\",\n  delay = 0,\n  speed = 40\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isDecrypting, setIsDecrypting] = useState(true);\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789#@_';\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index <= text.length) {\n          setDisplayText(text.slice(0, index) + text.slice(index).split('').map(() => chars[Math.floor(Math.random() * chars.length)]).join(''));\n          if (index === text.length) {\n            setDisplayText(text);\n            setIsDecrypting(false);\n            clearInterval(interval);\n          }\n          index++;\n        }\n      }, speed);\n      return () => clearInterval(interval);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [text, delay, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `\n        font-cyber text-glow transition-all duration-300\n        ${isDecrypting ? 'text-electric-cyan' : 'text-cyber-blue-400'}\n        ${className}\n      `,\n    children: [displayText, isDecrypting && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"animate-pulse text-neon-blue\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DecryptedText, \"pahCV/dJG0kJ5EqOE7ieTsy2BiY=\");\n_c = DecryptedText;\nexport default DecryptedText;\nvar _c;\n$RefreshReg$(_c, \"DecryptedText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DecryptedText","text","className","delay","speed","_s","displayText","setDisplayText","isDecrypting","setIsDecrypting","chars","timeout","setTimeout","index","interval","setInterval","length","slice","split","map","Math","floor","random","join","clearInterval","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mithil H M/Downloads/form'/src/components/ui/DecryptedText.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DecryptedText = ({ text, className = \"\", delay = 0, speed = 40 }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isDecrypting, setIsDecrypting] = useState(true);\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789#@_';\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index <= text.length) {\n          setDisplayText(\n            text.slice(0, index) +\n            text\n              .slice(index)\n              .split('')\n              .map(() => chars[Math.floor(Math.random() * chars.length)])\n              .join('')\n          );\n          if (index === text.length) {\n            setDisplayText(text);\n            setIsDecrypting(false);\n            clearInterval(interval);\n          }\n          index++;\n        }\n      }, speed);\n      return () => clearInterval(interval);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [text, delay, speed]);\n\n  return (\n    <span\n      className={`\n        font-cyber text-glow transition-all duration-300\n        ${isDecrypting ? 'text-electric-cyan' : 'text-cyber-blue-400'}\n        ${className}\n      `}\n    >\n      {displayText}\n      {isDecrypting && <span className=\"animate-pulse text-neon-blue\">|</span>}\n    </span>\n  );\n};\n\nexport default DecryptedText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS,GAAG,EAAE;EAAEC,KAAK,GAAG,CAAC;EAAEC,KAAK,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMc,KAAK,GAAG,yCAAyC;EAEvDb,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/B,IAAIC,KAAK,GAAG,CAAC;MACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAIF,KAAK,IAAIZ,IAAI,CAACe,MAAM,EAAE;UACxBT,cAAc,CACZN,IAAI,CAACgB,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC,GACpBZ,IAAI,CACDgB,KAAK,CAACJ,KAAK,CAAC,CACZK,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,MAAMT,KAAK,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,CAC1DO,IAAI,CAAC,EAAE,CACZ,CAAC;UACD,IAAIV,KAAK,KAAKZ,IAAI,CAACe,MAAM,EAAE;YACzBT,cAAc,CAACN,IAAI,CAAC;YACpBQ,eAAe,CAAC,KAAK,CAAC;YACtBe,aAAa,CAACV,QAAQ,CAAC;UACzB;UACAD,KAAK,EAAE;QACT;MACF,CAAC,EAAET,KAAK,CAAC;MACT,OAAO,MAAMoB,aAAa,CAACV,QAAQ,CAAC;IACtC,CAAC,EAAEX,KAAK,CAAC;IACT,OAAO,MAAMsB,YAAY,CAACd,OAAO,CAAC;EACpC,CAAC,EAAE,CAACV,IAAI,EAAEE,KAAK,EAAEC,KAAK,CAAC,CAAC;EAExB,oBACEL,OAAA;IACEG,SAAS,EAAE;AACjB;AACA,UAAUM,YAAY,GAAG,oBAAoB,GAAG,qBAAqB;AACrE,UAAUN,SAAS;AACnB,OAAQ;IAAAwB,QAAA,GAEDpB,WAAW,EACXE,YAAY,iBAAIT,OAAA;MAAMG,SAAS,EAAC,8BAA8B;MAAAwB,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX,CAAC;AAACzB,EAAA,CA3CIL,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}