{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mithil H M\\\\Downloads\\\\form'\\\\src\\\\components\\\\ui\\\\DecryptedText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecryptedText = ({\n  text,\n  className = \"\",\n  delay = 0,\n  speed = 50\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [isDecrypting, setIsDecrypting] = useState(true);\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*';\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let currentIndex = 0;\n      const decryptInterval = setInterval(() => {\n        if (currentIndex <= text.length) {\n          const decrypted = text.slice(0, currentIndex);\n          const remaining = text.slice(currentIndex);\n          const scrambled = remaining.split('').map(() => characters[Math.floor(Math.random() * characters.length)]).join('');\n          setDisplayText(decrypted + scrambled);\n          if (currentIndex === text.length) {\n            setDisplayText(text);\n            setIsDecrypting(false);\n            clearInterval(decryptInterval);\n          }\n          currentIndex++;\n        }\n      }, speed);\n      return () => clearInterval(decryptInterval);\n    }, delay);\n    return () => clearTimeout(timeout);\n  }, [text, delay, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `\n        font-cyber text-glow transition-all duration-300\n        ${isDecrypting ? 'text-electric-cyan' : 'text-cyber-blue-400'}\n        ${className}\n      `,\n    children: [displayText, isDecrypting && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"animate-pulse text-neon-blue\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DecryptedText, \"pahCV/dJG0kJ5EqOE7ieTsy2BiY=\");\n_c = DecryptedText;\nexport default DecryptedText;\nvar _c;\n$RefreshReg$(_c, \"DecryptedText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DecryptedText","text","className","delay","speed","_s","displayText","setDisplayText","isDecrypting","setIsDecrypting","characters","timeout","setTimeout","currentIndex","decryptInterval","setInterval","length","decrypted","slice","remaining","scrambled","split","map","Math","floor","random","join","clearInterval","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mithil H M/Downloads/form'/src/components/ui/DecryptedText.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst DecryptedText = ({ \n  text, \n  className = \"\", \n  delay = 0,\n  speed = 50 \n}) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isDecrypting, setIsDecrypting] = useState(true);\n\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*';\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      let currentIndex = 0;\n      const decryptInterval = setInterval(() => {\n        if (currentIndex <= text.length) {\n          const decrypted = text.slice(0, currentIndex);\n          const remaining = text.slice(currentIndex);\n          const scrambled = remaining\n            .split('')\n            .map(() => characters[Math.floor(Math.random() * characters.length)])\n            .join('');\n          \n          setDisplayText(decrypted + scrambled);\n          \n          if (currentIndex === text.length) {\n            setDisplayText(text);\n            setIsDecrypting(false);\n            clearInterval(decryptInterval);\n          }\n          \n          currentIndex++;\n        }\n      }, speed);\n      \n      return () => clearInterval(decryptInterval);\n    }, delay);\n    \n    return () => clearTimeout(timeout);\n  }, [text, delay, speed]);\n\n  return (\n    <span \n      className={`\n        font-cyber text-glow transition-all duration-300\n        ${isDecrypting ? 'text-electric-cyan' : 'text-cyber-blue-400'}\n        ${className}\n      `}\n    >\n      {displayText}\n      {isDecrypting && (\n        <span className=\"animate-pulse text-neon-blue\">|</span>\n      )}\n    </span>\n  );\n};\n\nexport default DecryptedText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EACrBC,IAAI;EACJC,SAAS,GAAG,EAAE;EACdC,KAAK,GAAG,CAAC;EACTC,KAAK,GAAG;AACV,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMc,UAAU,GAAG,6CAA6C;EAEhEb,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/B,IAAIC,YAAY,GAAG,CAAC;MACpB,MAAMC,eAAe,GAAGC,WAAW,CAAC,MAAM;QACxC,IAAIF,YAAY,IAAIZ,IAAI,CAACe,MAAM,EAAE;UAC/B,MAAMC,SAAS,GAAGhB,IAAI,CAACiB,KAAK,CAAC,CAAC,EAAEL,YAAY,CAAC;UAC7C,MAAMM,SAAS,GAAGlB,IAAI,CAACiB,KAAK,CAACL,YAAY,CAAC;UAC1C,MAAMO,SAAS,GAAGD,SAAS,CACxBE,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,MAAMZ,UAAU,CAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC,CACpEU,IAAI,CAAC,EAAE,CAAC;UAEXnB,cAAc,CAACU,SAAS,GAAGG,SAAS,CAAC;UAErC,IAAIP,YAAY,KAAKZ,IAAI,CAACe,MAAM,EAAE;YAChCT,cAAc,CAACN,IAAI,CAAC;YACpBQ,eAAe,CAAC,KAAK,CAAC;YACtBkB,aAAa,CAACb,eAAe,CAAC;UAChC;UAEAD,YAAY,EAAE;QAChB;MACF,CAAC,EAAET,KAAK,CAAC;MAET,OAAO,MAAMuB,aAAa,CAACb,eAAe,CAAC;IAC7C,CAAC,EAAEX,KAAK,CAAC;IAET,OAAO,MAAMyB,YAAY,CAACjB,OAAO,CAAC;EACpC,CAAC,EAAE,CAACV,IAAI,EAAEE,KAAK,EAAEC,KAAK,CAAC,CAAC;EAExB,oBACEL,OAAA;IACEG,SAAS,EAAE;AACjB;AACA,UAAUM,YAAY,GAAG,oBAAoB,GAAG,qBAAqB;AACrE,UAAUN,SAAS;AACnB,OAAQ;IAAA2B,QAAA,GAEDvB,WAAW,EACXE,YAAY,iBACXT,OAAA;MAAMG,SAAS,EAAC,8BAA8B;MAAA2B,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAvDIL,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}